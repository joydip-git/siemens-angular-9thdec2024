https://github.com/joydip-git/siemens-angular-9thdec2024

Learning curve:
-------------------------
JavaScript
TypeScript
Node JS

Angular

S/w:
-----------------
node js
vs code

Angular: 
------------------
web app technology/framework
client-side SPA (single page application)

production web server:
-----------------
Internet Information Service (IIS) - windows
tomcat(apache)
nginx
vercel
etc.


app development web server:
------------------------------------
a web server which will host your application in the dev machine
live server
lite server etc.


how browser understands JS and HTML?
------------------------------------
html parser
JS engine

JS engine:
----------------------
chrome => V8
safari => JavaScript Core (Indigo)
firefox => spidermonkey
opera => chromekit browser
egde => chakra (later V8)

Node JS => 
	C++ app integrated with V8 engine  (Ryan Dahl - 2009)
	JS runtime with lots of built-in methods in different modules

2009 => Angular JS
2011 => React JS (GrapahQL)
2013 => Vue JS

JavaScript:
----------------------------
1. data types
	=> string, number, boolean, object
	=> undefined, NaN, Infinity, null, var
2. operators
3. control flow statements

JS Features:
-------------------
DOESN'T allow you to use strict typing => no data typification => loosely-typed language
"var" keyword helps you declare a loosely-typed variable

JS offers no static type checking, everything is checked during runtime => dynamic language


strict equality and inequality

JS compilation:
1. preparation
2. execution

TypeScript => 
a. strict typing
b. static type checking

TS => JS [transpilation]
tool => TypeScript Compiler (TSC)

local installation:
command: >npm install/i <package-name> -D [--save-dev] (development dependency)
command: >npm install/i <package-name> [--save] (complete dependency)
path: app directory
source code: node_modules
executable script files: inside .bin folder of node_modules


global installation:
command: >npm install/i <package-name> --location=global
path: C:\Users\<user-name>\AppData\Roaming\npm
source code: node_modules
executable script files: outside node_modules (in the npm directory)

package managers:
npm, yarn, bower,...

package.json => JSON file with config and dependencies (at the root of app directory)
1. manual
2. npm tool command
	>npm init or >npm init --yes


ECMA
	ECMAScript (ES)
		ES 2.0/3.0/5.0 (2011)

		New versions: (ES6+/ESNext)
		ES 6.0 (2015)
		...
		ES 15.0 (2024)

TS => JS
backward compatibility

package.json script running:
npm run <script-name>
npm tool will look into ./node_modules/.bin folder for any executable

tsconfig.json => 
create using >.\node_modules\.bin\tsc --init


developer: 
data: name, id, basic, da, hra, incentive
function: calculateSalary():number

hr: 
data: name, id, basic, da, hra, gratuity
function: calculateSalary():number

create objects of developer and hr
save them into an array
iterate through the array and print the total salary of all employees










	
















